<?php
/**
 * @project    Hesper Framework
 * @author     Alex Gorbylev
 * @originally onPHP Framework
 * @originator Konstantin V. Arkhipov
 */
namespace Hesper\Meta\Builder;

use Hesper\Core\Base\StaticFactory;
use Hesper\Core\Exception\UnimplementedFeatureException;
use Hesper\Meta\Entity\MetaClass;
use Hesper\Meta\Entity\MetaClassNameBuilder;
use Hesper\Meta\Pattern\AbstractClassPattern;

/**
 * Class BaseBuilder
 * @package Hesper\Meta\Entity
 */
abstract class BaseBuilder extends StaticFactory {

	public static function build(MetaClass $class) {
		throw new UnimplementedFeatureException('i am forgotten method');
	}

	protected static function buildPointers(MetaClass $class) {
		$out = null;

		if (!$class->getPattern() instanceof AbstractClassPattern) {
			if ($source = $class->getSourceLink()) {
				$out .= <<<EOT
	protected \$linkName =  '{$source}';
	

EOT;
			}

			if ($class->getIdentifier()
			          ->getColumnName() !== 'id'
			) {
				$out .= <<<EOT
public function getIdName()
{
	return '{$class->getIdentifier()
				   ->getColumnName()}';
}

EOT;
			}

			$fullClassName = MetaClassNameBuilder::getClassOfMetaClass($class, true);
			$out .= <<<EOT
public function getTable()
{
	return '{$class->getTableName()}';
}

public function getObjectName()
{
	return '{$fullClassName}';
}

EOT;
			if( $class->isSequenceless() ) {
				$out .= <<<EOT

public function getSequence()
{
	throw new \Hesper\Core\Exception\UnimplementedFeatureException();
}
EOT;
			} else {
				$out .= <<<EOT

public function getSequence()
{
	return '{$class->getTableName()}_id';
}
EOT;
			}
		} elseif ($class->getWithInternalProperties()) {
			$out .= <<<EOT
// no get{Table,ObjectName,Sequence} for abstract class
EOT;
		}

		if ($liaisons = $class->getReferencingClasses()) {
			$uncachers = [];
			foreach ($liaisons as $className) {
				$uncachers[] = $className . '::dao()->uncacheLists();';
			}

			$uncachers = implode("\n", $uncachers);

			$out .= <<<EOT


public function uncacheLists()
{
{$uncachers}

return parent::uncacheLists();
}
EOT;
		}

		return $out;
	}

	protected static function getHead() {
		$head = self::startCap();

		$head .= ' *   This file is autogenerated - do not edit.' . '                               *';

		return $head . "\n" . self::endCap();
	}

	protected static function startCap() {
		$version = HESPER_VERSION;
		$date = date('Y-m-d H:i:s');

		$info = " *   Generated by Hesper-{$version} at {$date}";
		$info = str_pad($info, 77, ' ', STR_PAD_RIGHT) . '*';

		$cap = <<<EOT
<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, Hesper's MetaConfiguration Builder.             *
{$info}

EOT;

		return $cap;
	}

	protected static function endCap() {
		$cap = <<<EOT
 *****************************************************************************/


EOT;

		return $cap;
	}

	protected static function getHeel() {
		return '';
	}
}
